# -*- coding: utf-8 -*-
"""ExtractTuit.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17mOqosSRT_Jo8JtJsR-Zywa0BwVUzlxN
"""

import tweepy

# Clase para efectuar la conexión con el API
# y realizar la "escucha" de tuits
class TweetsListener(tweepy.StreamListener):
    # Efectuamos la conexión
    def on_connect(self):
        print("Conexión exitosa!")

    # Recibimos los tuits
    def on_status(self, status):
        print(status.text)

    # Estatus de la conexión
    def on_error(self, status_code):
        print("Error de conexión", status_code)

# Credenciales de acceso
consumer_key = ""
consumer_secret = ""
access_token = ""
access_token_secret = ""

# Nos autenticamos con nuestras credenciales de twitter
auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)

# WAIT ON RATE LIMIT Nos garantiza que al llegar a un limite el código no caiga
# sino que espera hasta volver a tener cota
api = tweepy.API(auth, wait_on_rate_limit=True, wait_on_rate_limit_notify=True)

# Creamos una clase para monitorear los tuits
stream = TweetsListener()
streamingApi = tweepy.Stream(auth=api.auth, listener=stream)


# Filtramos los datos
# Se puede hacer uso sólo de un parametro por filter
# para buscar tuits haciendo uso de localización geografica 

#streamingApi.filter(locations=[-101.2307135627,19.6456979215,-101.2227501866,19.6501764371])

# Obtener tuits de algún usuario o usuarios en especifico

#streamingApi.filter(follow=["151179935"])

# Obtener tuits mediante palabras clave

streamingApi.filter(track = ["enes", "ENES", "ENES Morelia", "enes Morelia"])

